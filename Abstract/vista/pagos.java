package vista;

import factory.CreadorEfectivo;
import factory.CreadorPago;
import factory.CreadorTarjeta;
import controlador.PagoController;
import modelo.Pago;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author maleja
 */
public class pagos extends javax.swing.JFrame {  
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(pagos.class.getName());

    /**
     * Creates new form pagos
     */
    // Dentro de pagos.java
    private DefaultTableModel modeloTabla;
    private PagoController controller;

    public pagos() {
        initComponents();
        controller = new PagoController();

        // âœ… Asegura que solo uno de los botones se seleccione
        ButtonGroup group = new ButtonGroup();
        group.add(efectivo_boton);
        group.add(tarjeta_boton);
        efectivo_boton.setSelected(true);

        // Inicializa tabla sin permitir ediciÃ³n
        modeloTabla = new DefaultTableModel(new Object[]{"ID", "Monto", "MÃ©todo"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tabla.setModel(modeloTabla);

        // âœ… Detectar clic en una fila
        tabla.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila = tabla.getSelectedRow();
                if (fila >= 0) {
                    id_text.setText(tabla.getValueAt(fila, 0).toString());
                    monto_text.setText(tabla.getValueAt(fila, 1).toString());
                    String metodo = tabla.getValueAt(fila, 2).toString();
                    if (metodo.equalsIgnoreCase("Efectivo")) {
                        efectivo_boton.setSelected(true);
                    } else {
                        tarjeta_boton.setSelected(true);
                    }
                    id_text.setEnabled(false); // ðŸ”’ No se puede editar el ID
                }
            }
        });
    }

    private void actualizarTabla() {
        modeloTabla.setRowCount(0);
        for (Pago p : controller.listarPagos()) {
            modeloTabla.addRow(new Object[]{p.getId(), p.getMonto(), p.getMetodo()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        crear_boton = new javax.swing.JButton();
        actualizar_boton = new javax.swing.JButton();
        eliminar_boton = new javax.swing.JButton();
        ver_boton = new javax.swing.JButton();
        id_text = new javax.swing.JTextField();
        monto_text = new javax.swing.JTextField();
        id_label = new javax.swing.JLabel();
        monto_label = new javax.swing.JLabel();
        metodo_label = new javax.swing.JLabel();
        efectivo_boton = new javax.swing.JRadioButton();
        tarjeta_boton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Monto", "MÃ©todo"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        crear_boton.setText("Crear");
        crear_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_botonActionPerformed(evt);
            }
        });

        actualizar_boton.setText("Actualizar");
        actualizar_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizar_botonActionPerformed(evt);
            }
        });

        eliminar_boton.setText("Eliminar");
        eliminar_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_botonActionPerformed(evt);
            }
        });

        ver_boton.setText("Ver");
        ver_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ver_botonActionPerformed(evt);
            }
        });

        id_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_textActionPerformed(evt);
            }
        });

        id_label.setText("ID:");

        monto_label.setText("Monto:");

        metodo_label.setText("MÃ©todo:");

        efectivo_boton.setText("Efectivo");

        tarjeta_boton.setText("Tarjeta");
        tarjeta_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarjeta_botonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id_label)
                                    .addComponent(monto_label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(metodo_label, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(efectivo_boton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tarjeta_boton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(id_text, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                        .addComponent(monto_text))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(crear_boton)
                                .addGap(18, 18, 18)
                                .addComponent(actualizar_boton)
                                .addGap(18, 18, 18)
                                .addComponent(eliminar_boton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ver_boton)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_label)
                    .addComponent(id_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monto_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monto_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(metodo_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(efectivo_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tarjeta_boton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear_boton)
                    .addComponent(actualizar_boton)
                    .addComponent(eliminar_boton)
                    .addComponent(ver_boton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>                        

    private void id_textActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void crear_botonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(id_text.getText().trim());
            int monto = Integer.parseInt(monto_text.getText().trim());
            CreadorPago creador = efectivo_boton.isSelected() ? new CreadorEfectivo() : new CreadorTarjeta();

            boolean creado = controller.crearPago(creador, id, monto);
            if (!creado) {
                JOptionPane.showMessageDialog(this, "Ya existe un pago con ID: " + id,
                        "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                actualizarTabla();
                limpiarCampos();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID y Monto deben ser nÃºmeros vÃ¡lidos.",
                    "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }
    }                                           

    private void actualizar_botonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
         try {
            int id = Integer.parseInt(id_text.getText().trim());
            int monto = Integer.parseInt(monto_text.getText().trim());
            String metodo = efectivo_boton.isSelected() ? "Efectivo" : "Tarjeta";

            boolean ok = controller.actualizarPago(id, monto, metodo);
            if (!ok) {
                JOptionPane.showMessageDialog(this, "No existe pago con ID: " + id,
                        "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                actualizarTabla();
                limpiarCampos();
                id_text.setEnabled(true);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Monto debe ser un nÃºmero vÃ¡lido.",
                    "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }   
    }                                                

    private void tarjeta_botonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void eliminar_botonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(id_text.getText().trim());
            boolean ok = controller.eliminarPago(id);
            if (!ok) {
                JOptionPane.showMessageDialog(this, "No existe pago con ID: " + id,
                        "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                actualizarTabla();
                limpiarCampos();
                id_text.setEnabled(true);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID debe ser un nÃºmero vÃ¡lido.",
                    "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }
    }                                              

    private void ver_botonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        String idTexto = id_text.getText().trim();

        // Si el campo de ID estÃ¡ vacÃ­o, muestra todos los pagos
        if (idTexto.isEmpty()) {
            actualizarTabla();
            return;
        }

        try {
            int id = Integer.parseInt(idTexto);
            var pagoOpt = controller.obtenerPago(id);

            if (pagoOpt.isPresent()) {
                Pago p = pagoOpt.get();
                monto_text.setText(String.valueOf(p.getMonto()));

                if (p.getMetodo().equalsIgnoreCase("Efectivo")) {
                    efectivo_boton.setSelected(true);
                } else {
                    tarjeta_boton.setSelected(true);
                }

                // âœ… Limpiamos la tabla y mostramos solo ese pago
                modeloTabla.setRowCount(0);
                modeloTabla.addRow(new Object[]{p.getId(), p.getMonto(), p.getMetodo()});

            } else {
                JOptionPane.showMessageDialog(this, "No existe pago con ID: " + id,
                        "Error", JOptionPane.WARNING_MESSAGE);
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID debe ser un nÃºmero vÃ¡lido.",
                    "Error de entrada", JOptionPane.ERROR_MESSAGE);
        }
    }                                         
    
    private void limpiarCampos() {
        id_text.setText("");
        monto_text.setText("");
        efectivo_boton.setSelected(true);
        id_text.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new pagos().setVisible(true));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton actualizar_boton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton crear_boton;
    private javax.swing.JRadioButton efectivo_boton;
    private javax.swing.JButton eliminar_boton;
    private javax.swing.JLabel id_label;
    private javax.swing.JTextField id_text;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel metodo_label;
    private javax.swing.JLabel monto_label;
    private javax.swing.JTextField monto_text;
    private javax.swing.JTable tabla;
    private javax.swing.JRadioButton tarjeta_boton;
    private javax.swing.JButton ver_boton;
    // End of variables declaration                   
}
