/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;
import java.util.Scanner;

/**
 *
 * @author maleja
 */
import controlador.TiqueteController;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelo.Tiquete;

public class SistemaTiquetes extends javax.swing.JFrame {
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SistemaTiquetes.class.getName());
    
    private TiqueteController controller;
    private DefaultTableModel modeloTabla;

    public SistemaTiquetes() {
        initComponents();
        controller = new TiqueteController();

        // Agrupar botones de tipo factura
        ButtonGroup grupo = new ButtonGroup();
        grupo.add(paquete_boton);
        grupo.add(pasajero_boton);

        // Bloquear campos al inicio
        id_fact_text.setEditable(false);
        items_text.setEnabled(false);
        tiquetes_text.setEnabled(false);

        // Configurar tabla
        modeloTabla = new DefaultTableModel(new Object[]{"ID factura", "Tipo", "ID cliente", "Valor"}, 0);
        tabla.setModel(modeloTabla);

        // Listeners para botones
        paquete_boton.addActionListener(e -> activarCampos("paquete"));
        pasajero_boton.addActionListener(e -> activarCampos("pasajero"));

        // Validaciones
        soloNumeros(id_cliente_text);
        soloNumeros(valor_text);
        soloNumeros(items_text);
        soloNumeros(tiquetes_text);

        soloLetras(nombre_text);
        soloLetras(destini_text);
    }

    private void activarCampos(String tipo) {
        if (tipo.equals("paquete")) {
            items_text.setEnabled(true);
            tiquetes_text.setEnabled(false);
            tiquetes_text.setText("");
        } else {
            tiquetes_text.setEnabled(true);
            items_text.setEnabled(false);
            items_text.setText("");
        }
    }                                  

    private void limpiarCampos() {
        id_cliente_text.setText("");
        nombre_text.setText("");
        destini_text.setText("");
        valor_text.setText("");
        items_text.setText("");
        tiquetes_text.setText("");
        paquete_boton.setSelected(false);
        pasajero_boton.setSelected(false);
        items_text.setEnabled(false);
        tiquetes_text.setEnabled(false);
    }

    // ðŸ”’ VALIDACIONES
    private void soloNumeros(JTextField campo) {
        campo.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
                    e.consume();
                    JOptionPane.showMessageDialog(null, "Solo se permiten nÃºmeros en este campo.");
                }
            }
        });
    }

    private void soloLetras(JTextField campo) {
        campo.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isLetter(c) && c != KeyEvent.VK_SPACE && c != KeyEvent.VK_BACK_SPACE) {
                    e.consume();
                    JOptionPane.showMessageDialog(null, "Solo se permiten letras en este campo.");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tipo_factura = new javax.swing.JLabel();
        paquete_boton = new javax.swing.JRadioButton();
        pasajero_boton = new javax.swing.JRadioButton();
        inf = new javax.swing.JLabel();
        id_client = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        destino = new javax.swing.JLabel();
        valor = new javax.swing.JLabel();
        id_cliente_text = new javax.swing.JTextField();
        nombre_text = new javax.swing.JTextField();
        destini_text = new javax.swing.JTextField();
        valor_text = new javax.swing.JTextField();
        crear_boton = new javax.swing.JButton();
        id_fact_text = new javax.swing.JTextField();
        id_fact = new javax.swing.JLabel();
        items = new javax.swing.JLabel();
        items_text = new javax.swing.JTextField();
        tiquetes = new javax.swing.JLabel();
        tiquetes_text = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("SISTEMA DE TIQUETES");

        tipo_factura.setText("Tipo factura:");

        paquete_boton.setText("Paquete");

        pasajero_boton.setText("Pasajero");

        inf.setText("InformaciÃ³n");

        id_client.setText("ID Cliente:");

        nombre.setText("Nombre:");

        destino.setText("Destino:");

        valor.setText("Valor:");

        id_cliente_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_cliente_textActionPerformed(evt);
            }
        });

        nombre_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre_textActionPerformed(evt);
            }
        });

        destini_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destini_textActionPerformed(evt);
            }
        });

        valor_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valor_textActionPerformed(evt);
            }
        });

        crear_boton.setText("Crear Factura");
        crear_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_botonActionPerformed(evt);
            }
        });

        id_fact_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_fact_textActionPerformed(evt);
            }
        });

        id_fact.setText("ID factura:");

        items.setText("Cantidad de items:");

        items_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                items_textActionPerformed(evt);
            }
        });

        tiquetes.setText("Cantidad de tiquetes:");

        tiquetes_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiquetes_textActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID factura", "Tipo", "ID cliente", "Valor"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(crear_boton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tiquetes)
                            .addComponent(items))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tiquetes_text)
                            .addComponent(items_text, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inf)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(id_fact)
                                    .addGap(18, 18, 18)
                                    .addComponent(id_fact_text, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(nombre)
                                                .addComponent(destino)
                                                .addComponent(valor))
                                            .addGap(28, 28, 28))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(id_client)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nombre_text)
                                        .addComponent(id_cliente_text)
                                        .addComponent(destini_text)
                                        .addComponent(valor_text, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tipo_factura)
                            .addGap(18, 18, 18)
                            .addComponent(paquete_boton)
                            .addGap(18, 18, 18)
                            .addComponent(pasajero_boton))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_cliente_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_client))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destini_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valor_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_fact_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_fact))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo_factura)
                    .addComponent(paquete_boton)
                    .addComponent(pasajero_boton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(items)
                    .addComponent(items_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiquetes)
                    .addComponent(tiquetes_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(crear_boton)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void crear_botonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:                                         
        try {
            // Validar que los campos obligatorios estÃ©n llenos
            if (id_cliente_text.getText().isEmpty() || nombre_text.getText().isEmpty() ||
                destini_text.getText().isEmpty() || valor_text.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos requeridos.");
                return;
            }

            String idCliente = id_cliente_text.getText();
            String nombre = nombre_text.getText();
            String destino = destini_text.getText();
            double valor = Double.parseDouble(valor_text.getText());

            // Valor mÃ­nimo de tres cifras
            if (valor < 100) {
                JOptionPane.showMessageDialog(this, "El valor debe tener al menos tres cifras (mÃ­nimo 100).");
                return;
            }

            String tipo = paquete_boton.isSelected() ? "paquete" : 
                          pasajero_boton.isSelected() ? "pasajero" : "";

            if (tipo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de factura.");
                return;
            }

            int cantidad;
            if (tipo.equals("paquete")) {
                if (items_text.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese cantidad de Ã­tems para paquete.");
                    return;
                }
                cantidad = Integer.parseInt(items_text.getText());
            } else {
                if (tiquetes_text.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Ingrese cantidad de tiquetes para pasajero.");
                    return;
                }
                cantidad = Integer.parseInt(tiquetes_text.getText());
            }

            // Crear factura
            Tiquete factura = controller.crearFactura(tipo, idCliente, nombre, destino, valor, cantidad);

            if (factura != null) {
                id_fact_text.setText(factura.idFactura);
                modeloTabla.addRow(new Object[]{
                    factura.idFactura,
                    tipo,
                    factura.idCliente,
                    factura.valor
                });
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al crear la factura.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: verifique los campos numÃ©ricos.");
        }
    }                                           

    private void id_cliente_textActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        
    }                                               

    private void nombre_textActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void destini_textActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void valor_textActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void id_fact_textActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void items_textActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void tiquetes_textActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new SistemaTiquetes().setVisible(true));
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton crear_boton;
    private javax.swing.JTextField destini_text;
    private javax.swing.JLabel destino;
    private javax.swing.JLabel id_client;
    private javax.swing.JTextField id_cliente_text;
    private javax.swing.JLabel id_fact;
    private javax.swing.JTextField id_fact_text;
    private javax.swing.JLabel inf;
    private javax.swing.JLabel items;
    private javax.swing.JTextField items_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombre_text;
    private javax.swing.JRadioButton paquete_boton;
    private javax.swing.JRadioButton pasajero_boton;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel tipo_factura;
    private javax.swing.JLabel tiquetes;
    private javax.swing.JTextField tiquetes_text;
    private javax.swing.JLabel valor;
    private javax.swing.JTextField valor_text;
    // End of variables declaration                   
}
